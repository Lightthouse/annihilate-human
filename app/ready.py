# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'frames/ready.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QIcon
from dbconnect import DbConnection
import re


class Ui_MainWindow(object):

    def __init__(self):
        self.db_worker = DbConnection()

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(608, 445)
        icon = QIcon('redone.png')
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(280, 80, 205, 205))
        self.pushButton.setStyleSheet(''' 
            QPushButton {
                color: #333;
                border: 2px solid #555;
                border-radius: 100%;
                border-style: outset;
                background: qradialgradient(
                    cx: 0.3, cy: -0.4, fx: 0.3, fy: -0.4,
                    radius: 1.35, stop: 0 #fff, stop: 1 #888
                    );
                padding: 5px;
            }

            QPushButton:hover {
                background: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(255, 41, 0, 255), stop:1 rgba(255, 255, 255, 255))
            }
            
            QPushButton:pressed {
                border: 5px solid black;
                background-color: red; 
            }
        ''')
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.destroy_human)
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(10, 160, 231, 41))
        self.textEdit.setObjectName("textEdit")
        self.textEdit.setStyleSheet('''
            QTextEdit {
                background-color: rgb(122, 176, 179);
                font-size: 22px;
            }
        ''')
        self.textEdit.textChanged.connect(self.validate_input)
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(40, 90, 181, 31))
        self.label.setFrameShape(QtWidgets.QFrame.Box)
        self.label.setLineWidth(2)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 608, 30))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Уничтожение"))
        self.pushButton.setText(_translate("MainWindow", "DELETE"))
        self.textEdit.setWhatsThis(_translate("MainWindow", "<html><head/><body><p align=\"center\"><br/></p></body></html>"))
        self.textEdit.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Noto Sans\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.label.setText(_translate("MainWindow", "Номер телефона"))

    def printsmt(self):
        print(self.textEdit.toPlainText())

    def destroy_human(self):
        phone = self.textEdit.toPlainText()
        self.db_worker.get_by_phone(phone)


    def validate_input(self):
        input_string = self.textEdit.toPlainText()
        if not input_string.isdigit() and len(input_string) > 0:
            num_string = re.sub(r'\D', '', input_string)
            self.textEdit.setText(num_string)
